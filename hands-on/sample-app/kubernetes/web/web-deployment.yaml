# Web Application Deployment
# AWS ECSのサービス・タスク定義に相当
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deployment
  namespace: sample-app
  labels:
    app: sample-app
    component: web
    tier: frontend
spec:
  replicas: 3  # 高可用性のため複数レプリカ
  selector:
    matchLabels:
      app: sample-app
      component: web
  template:
    metadata:
      labels:
        app: sample-app
        component: web
        tier: frontend
    spec:
      containers:
      - name: web-app
        image: k8s-sample-app:latest  # ローカルでビルドしたイメージ
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: http
        # 環境変数（ConfigMapとSecretから取得）
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: APP_PORT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: LOG_LEVEL
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DB_NAME
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: DB_PASSWORD
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: REDIS_PORT
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: JWT_SECRET
        - name: SESSION_SECRET
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: SESSION_SECRET
        # 設定ファイルをボリュームマウント
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        # リソース制限（AWS ECSのタスクサイズに相当）
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        # ヘルスチェック（AWS ECSのヘルスチェックに相当）
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        # スタートアッププローブ（起動時間が長い場合）
        startupProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 10
      volumes:
      - name: config-volume
        configMap:
          name: app-config
          items:
          - key: app.properties
            path: app.properties
      # デプロイメント戦略
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      nodeSelector:
        kubernetes.io/os: linux
